<?xml version='1.0'?>
<signatures version='0.9'>
<constant name='AFNetworkingErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingOperationDidFinishNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingOperationDidStartNotification' declared_type='NSString*' const='true' type='@'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFCreateIncompleteDownloadDirectoryPath'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='AFJSONDecode'>
<arg name='data' declared_type='NSData*' type='@'/>
<arg name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</function>
<function name='AFJSONEncode'>
<arg name='object' declared_type='id' type='@'/>
<arg name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg name='parameters' declared_type='NSDictionary*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='AFURLEncodedStringFromStringWithEncoding'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='1'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='2'/>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg name='method' declared_type='NSString*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='defaultValueForHeader:'>
<arg name='header' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='2'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg name='operations' declared_type='NSArray*' type='@' index='0'/>
<arg name='progressBlock' declared_type='void ^NSUInteger numberOfCompletedOperations, NSUInteger totalNumberOfOperations' index='1'/>
<arg name='completionBlock' declared_type='void ^NSArray *operations' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg name='requests' declared_type='NSArray*' type='@' index='0'/>
<arg name='progressBlock' declared_type='void ^NSUInteger numberOfCompletedOperations, NSUInteger totalNumberOfOperations' index='1'/>
<arg name='completionBlock' declared_type='void ^NSArray *operations' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg name='operation' declared_type='AFHTTPRequestOperation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='2'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg name='method' declared_type='NSString*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='2'/>
<arg name='block' declared_type='void ^id &lt;AFMultipartFormData&gt; formData' index='3'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='2'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='2'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='2'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg name='operationClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg name='method' declared_type='NSString*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg name='token' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<arg name='password' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg name='header' declared_type='NSString*' type='@' index='0'/>
<arg name='value' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg name='' declared_type='AFHTTPClientParameterEncoding' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg name='' declared_type='NSStringEncoding' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg name='operationClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg name='contentTypes' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg name='statusCodes' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='offsetContentLength'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' declared_type='void ^AFHTTPRequestOperation *operation, id responseObject' index='0'/>
<arg name='failure' declared_type='void ^AFHTTPRequestOperation *operation, NSError *error' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg name='' declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg name='' declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='totalContentLength'>
<retval declared_type='long long' type='q'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:cacheName:success:failure:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='imageProcessingBlock' declared_type='NSImage *^NSImage*' index='1'/>
<arg name='cacheNameOrNil' declared_type='NSString*' type='@' index='2'/>
<arg name='success' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSImage *image' index='3'/>
<arg name='failure' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSError *error' index='4'/>
<retval declared_type='AFImageRequestOperation*' type='@'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='success' declared_type='void ^NSImage *image' index='1'/>
<retval declared_type='AFImageRequestOperation*' type='@'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='success' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, id JSON' index='1'/>
<arg name='failure' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id JSON' index='2'/>
<retval declared_type='AFJSONRequestOperation*' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='success' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, id propertyList' index='1'/>
<arg name='failure' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id propertyList' index='2'/>
<retval declared_type='AFPropertyListRequestOperation*' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg name='' declared_type='NSPropertyListReadOptions' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='initWithRequest:'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg name='block' declared_type='BOOL ^NSURLConnection *connection, NSURLProtectionSpace *protectionSpace' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg name='block' declared_type='void ^NSURLConnection *connection, NSURLAuthenticationChallenge *challenge' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg name='block' declared_type='NSCachedURLResponse * ^NSURLConnection *connection, NSCachedURLResponse *cachedResponse' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg name='block' declared_type='void ^NSInteger bytesRead, long long totalBytesRead, long long totalBytesExpectedToRead' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg name='block' declared_type='void ^NSInteger bytesWritten, long long totalBytesWritten, long long totalBytesExpectedToWrite' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLDocumentRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='success' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSXMLDocument *document' index='1'/>
<arg name='failure' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, NSXMLDocument *document' index='2'/>
<retval declared_type='AFXMLRequestOperation*' type='@'/>
</method>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='success' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSXMLParser *XMLParser' index='1'/>
<arg name='failure' declared_type='void ^NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, NSXMLParser *XMLParse' index='2'/>
<retval declared_type='AFXMLRequestOperation*' type='@'/>
</method>
</class>
<class name='KSSHA1Stream'>
<method selector='SHA1DigestOfContentsOfURL:' class_method='true'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='initWithURL:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSData'>
<method selector='ks_SHA1Digest'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='ks_SHA1DigestString'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='fileName' declared_type='NSString*' type='@' index='2'/>
<arg name='mimeType' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg name='fileURL' declared_type='NSURL*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg name='headers' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='body' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
</signatures>